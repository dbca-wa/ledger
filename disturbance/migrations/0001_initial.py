# -*- coding: utf-8 -*-
# Generated by Django 1.10.8 on 2018-09-20 08:17
from __future__ import unicode_literals

import ckeditor.fields
import disturbance.components.approvals.models
import disturbance.components.compliances.models
import disturbance.components.organisations.models
import disturbance.components.proposals.models
from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('accounts', '0013_auto_20180207_1210'),
        ('sites', '0002_alter_domain_unique'),
    ]

    operations = [
        migrations.CreateModel(
            name='ActivityMatrix',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Disturbance', 'Disturbance')], default='Disturbance', max_length=24, verbose_name='Activity matrix name')),
                ('description', models.CharField(blank=True, max_length=256, null=True)),
                ('schema', django.contrib.postgres.fields.jsonb.JSONField()),
                ('version', models.SmallIntegerField(default=1)),
                ('ordered', models.BooleanField(default=False, verbose_name='Activities Ordered Alphabetically')),
                ('replaced_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='disturbance.ActivityMatrix')),
            ],
            options={
                'verbose_name_plural': 'Activity matrix',
            },
        ),
        migrations.CreateModel(
            name='AmendmentReason',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(max_length=125, verbose_name='Reason')),
            ],
        ),
        migrations.CreateModel(
            name='ApplicationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('order', models.PositiveSmallIntegerField(default=0)),
                ('visible', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Approval',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lodgement_number', models.CharField(blank=True, default='', max_length=9)),
                ('status', models.CharField(choices=[('current', 'Current'), ('expired', 'Expired'), ('cancelled', 'Cancelled'), ('surrendered', 'Surrendered'), ('suspended', 'Suspended')], default='current', max_length=40)),
                ('renewal_sent', models.BooleanField(default=False)),
                ('issue_date', models.DateTimeField()),
                ('original_issue_date', models.DateField(auto_now_add=True)),
                ('start_date', models.DateField()),
                ('expiry_date', models.DateField()),
                ('surrender_details', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('suspension_details', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('extracted_fields', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('cancellation_details', models.TextField(blank=True)),
                ('cancellation_date', models.DateField(blank=True, null=True)),
                ('set_to_cancel', models.BooleanField(default=False)),
                ('set_to_suspend', models.BooleanField(default=False)),
                ('set_to_surrender', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ApprovalDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('_file', models.FileField(upload_to=disturbance.components.approvals.models.update_approval_doc_filename)),
                ('approval', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='disturbance.Approval')),
            ],
        ),
        migrations.CreateModel(
            name='ApprovalLogDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('_file', models.FileField(null=True, upload_to=disturbance.components.approvals.models.update_approval_comms_log_filename)),
            ],
        ),
        migrations.CreateModel(
            name='ApprovalUserAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('when', models.DateTimeField(auto_now_add=True)),
                ('what', models.TextField()),
                ('approval', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='action_logs', to='disturbance.Approval')),
                ('who', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-when',),
            },
        ),
        migrations.CreateModel(
            name='CommunicationsLogEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('to', models.TextField(blank=True, verbose_name='To')),
                ('fromm', models.CharField(blank=True, max_length=200, verbose_name='From')),
                ('cc', models.TextField(blank=True, verbose_name='cc')),
                ('type', models.CharField(choices=[('email', 'Email'), ('phone', 'Phone Call'), ('mail', 'Mail'), ('person', 'In Person')], default='email', max_length=20)),
                ('reference', models.CharField(blank=True, max_length=100)),
                ('subject', models.CharField(blank=True, max_length=200, verbose_name='Subject / Description')),
                ('text', models.TextField(blank=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Compliance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lodgement_number', models.CharField(blank=True, default='', max_length=9)),
                ('due_date', models.DateField()),
                ('text', models.TextField(blank=True)),
                ('processing_status', models.CharField(choices=[('due', 'Due'), ('future', 'Future'), ('with_assessor', 'With Assessor'), ('approved', 'Approved')], max_length=20)),
                ('customer_status', models.CharField(choices=[('due', 'Due'), ('future', 'Future'), ('with_assessor', 'Under Review'), ('approved', 'Approved')], default='future', max_length=20)),
                ('lodgement_date', models.DateTimeField(blank=True, null=True)),
                ('reminder_sent', models.BooleanField(default=False)),
                ('approval', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compliances', to='disturbance.Approval')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='disturbance_compliance_assignments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ComplianceAmendmentReason',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(max_length=125, verbose_name='Reason')),
            ],
        ),
        migrations.CreateModel(
            name='ComplianceDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('_file', models.FileField(upload_to=disturbance.components.compliances.models.update_proposal_complaince_filename)),
                ('compliance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='disturbance.Compliance')),
            ],
        ),
        migrations.CreateModel(
            name='ComplianceLogDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('_file', models.FileField(upload_to=disturbance.components.compliances.models.update_compliance_comms_log_filename)),
            ],
        ),
        migrations.CreateModel(
            name='ComplianceUserAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('when', models.DateTimeField(auto_now_add=True)),
                ('what', models.TextField()),
                ('compliance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='action_logs', to='disturbance.Compliance')),
                ('who', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CompRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(blank=True, max_length=200)),
                ('text', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('code', models.CharField(max_length=3)),
                ('archive_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='HelpPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', ckeditor.fields.RichTextField()),
                ('description', models.CharField(blank=True, max_length=256, null=True)),
                ('help_type', models.SmallIntegerField(choices=[(1, 'External'), (2, 'Internal')], default=1, verbose_name='Help Type')),
                ('version', models.SmallIntegerField(default=1)),
                ('application_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='disturbance.ApplicationType')),
            ],
        ),
        migrations.CreateModel(
            name='Organisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pin_one', models.CharField(blank=True, max_length=50)),
                ('pin_two', models.CharField(blank=True, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='OrganisationAccessGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('members', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
                ('site', models.OneToOneField(default='1', on_delete=django.db.models.deletion.CASCADE, to='sites.Site')),
            ],
            options={
                'verbose_name_plural': 'Organisation access group',
            },
        ),
        migrations.CreateModel(
            name='OrganisationAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('when', models.DateTimeField(auto_now_add=True)),
                ('what', models.TextField()),
                ('organisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='action_logs', to='disturbance.Organisation')),
                ('who', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrganisationContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('first_name', models.CharField(max_length=128, verbose_name='Given name(s)')),
                ('last_name', models.CharField(max_length=128)),
                ('phone_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='phone number')),
                ('mobile_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='mobile number')),
                ('fax_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='fax number')),
                ('organisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='disturbance.Organisation')),
            ],
        ),
        migrations.CreateModel(
            name='OrganisationLogDocument',
            fields=[
                ('document_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='accounts.Document')),
                ('_file', models.FileField(upload_to=disturbance.components.organisations.models.update_organisation_comms_log_filename)),
            ],
            bases=('accounts.document',),
        ),
        migrations.CreateModel(
            name='OrganisationRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True)),
                ('abn', models.CharField(blank=True, max_length=50, null=True, verbose_name='ABN')),
                ('identification', models.FileField(blank=True, null=True, upload_to='organisation/requests/%Y/%m/%d')),
                ('status', models.CharField(choices=[('with_assessor', 'With Assessor'), ('approved', 'Approved'), ('declined', 'Declined')], default='with_assessor', max_length=100)),
                ('lodgement_date', models.DateTimeField(auto_now_add=True)),
                ('assigned_officer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='org_request_assignee', to=settings.AUTH_USER_MODEL)),
                ('requester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrganisationRequestDeclinedDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField(blank=True)),
                ('officer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='disturbance.OrganisationRequest')),
            ],
        ),
        migrations.CreateModel(
            name='OrganisationRequestLogDocument',
            fields=[
                ('document_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='accounts.Document')),
                ('_file', models.FileField(upload_to=disturbance.components.organisations.models.update_organisation_request_comms_log_filename)),
            ],
            bases=('accounts.document',),
        ),
        migrations.CreateModel(
            name='OrganisationRequestUserAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('when', models.DateTimeField(auto_now_add=True)),
                ('what', models.TextField()),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='action_logs', to='disturbance.OrganisationRequest')),
                ('who', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Proposal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proposal_type', models.CharField(choices=[('new_proposal', 'New Proposal'), ('amendment', 'Amendment'), ('renewal', 'Renewal')], default='new_proposal', max_length=40, verbose_name='Proposal Type')),
                ('data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('assessor_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('comment_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('schema', django.contrib.postgres.fields.jsonb.JSONField()),
                ('proposed_issuance_approval', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('customer_status', models.CharField(choices=[('temp', 'Temporary'), ('draft', 'Draft'), ('with_assessor', 'Under Review'), ('amendment_required', 'Amendment Required'), ('approved', 'Approved'), ('declined', 'Declined'), ('discarded', 'Discarded')], default='draft', max_length=40, verbose_name='Customer Status')),
                ('lodgement_number', models.CharField(blank=True, default='', max_length=9)),
                ('lodgement_sequence', models.IntegerField(blank=True, default=0)),
                ('lodgement_date', models.DateTimeField(blank=True, null=True)),
                ('processing_status', models.CharField(choices=[('temp', 'Temporary'), ('draft', 'Draft'), ('with_assessor', 'With Assessor'), ('with_referral', 'With Referral'), ('with_assessor_requirements', 'With Assessor (Requirements)'), ('with_approver', 'With Approver'), ('renewal', 'Renewal'), ('licence_amendment', 'Licence Amendment'), ('awaiting_applicant_response', 'Awaiting Applicant Response'), ('awaiting_assessor_response', 'Awaiting Assessor Response'), ('awaiting_responses', 'Awaiting Responses'), ('ready_for_conditions', 'Ready for Conditions'), ('ready_to_issue', 'Ready to Issue'), ('approved', 'Approved'), ('declined', 'Declined'), ('discarded', 'Discarded')], default='draft', max_length=30, verbose_name='Processing Status')),
                ('id_check_status', models.CharField(choices=[('not_checked', 'Not Checked'), ('awaiting_update', 'Awaiting Update'), ('updated', 'Updated'), ('accepted', 'Accepted')], default='not_checked', max_length=30, verbose_name='Identification Check Status')),
                ('compliance_check_status', models.CharField(choices=[('not_checked', 'Not Checked'), ('awaiting_returns', 'Awaiting Returns'), ('completed', 'Completed'), ('accepted', 'Accepted')], default='not_checked', max_length=30, verbose_name='Return Check Status')),
                ('character_check_status', models.CharField(choices=[('not_checked', 'Not Checked'), ('accepted', 'Accepted')], default='not_checked', max_length=30, verbose_name='Character Check Status')),
                ('review_status', models.CharField(choices=[('not_reviewed', 'Not Reviewed'), ('awaiting_amendments', 'Awaiting Amendments'), ('amended', 'Amended'), ('accepted', 'Accepted')], default='not_reviewed', max_length=30, verbose_name='Review Status')),
                ('proposed_decline_status', models.BooleanField(default=False)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('activity', models.CharField(blank=True, max_length=255, null=True)),
                ('tenure', models.CharField(blank=True, max_length=255, null=True)),
                ('approval_level', models.CharField(blank=True, max_length=255, null=True, verbose_name='Activity matrix approval level')),
                ('approval_comment', models.TextField(blank=True)),
                ('applicant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='proposals', to='disturbance.Organisation')),
                ('application_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='disturbance.ApplicationType')),
                ('approval', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='disturbance.Approval')),
            ],
        ),
        migrations.CreateModel(
            name='ProposalApproverGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('default', models.BooleanField(default=False)),
                ('members', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProposalAssessorGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('default', models.BooleanField(default=False)),
                ('members', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProposalDeclinedDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField(blank=True)),
                ('cc_email', models.TextField(null=True)),
                ('officer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('proposal', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='disturbance.Proposal')),
            ],
        ),
        migrations.CreateModel(
            name='ProposalDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('_file', models.FileField(upload_to=disturbance.components.proposals.models.update_proposal_doc_filename)),
                ('input_name', models.CharField(blank=True, max_length=255, null=True)),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='disturbance.Proposal')),
            ],
        ),
        migrations.CreateModel(
            name='ProposalLogDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('_file', models.FileField(upload_to=disturbance.components.proposals.models.update_proposal_comms_log_filename)),
            ],
        ),
        migrations.CreateModel(
            name='ProposalRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(blank=True, max_length=200)),
                ('text', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProposalRequirement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(db_index=True, editable=False)),
                ('free_requirement', models.TextField(blank=True, null=True)),
                ('standard', models.BooleanField(default=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('recurrence', models.BooleanField(default=False)),
                ('recurrence_pattern', models.SmallIntegerField(choices=[(1, 'Weekly'), (2, 'Monthly'), (3, 'Yearly')], default=1)),
                ('recurrence_schedule', models.IntegerField(blank=True, null=True)),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requirements', to='disturbance.Proposal')),
            ],
        ),
        migrations.CreateModel(
            name='ProposalStandardRequirement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('code', models.CharField(max_length=10, unique=True)),
                ('obsolete', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ProposalType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=256, null=True)),
                ('name', models.CharField(choices=[('Disturbance', 'Disturbance')], default='Disturbance', max_length=24, verbose_name='Application name (eg. Disturbance, Apiary)')),
                ('schema', django.contrib.postgres.fields.jsonb.JSONField()),
                ('version', models.SmallIntegerField(default=1)),
                ('activities', taggit.managers.TaggableManager(help_text='A comma-separated list of activities.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Activities')),
                ('replaced_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='disturbance.ProposalType')),
            ],
        ),
        migrations.CreateModel(
            name='ProposalUserAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('when', models.DateTimeField(auto_now_add=True)),
                ('what', models.TextField()),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='action_logs', to='disturbance.Proposal')),
                ('who', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-when',),
            },
        ),
        migrations.CreateModel(
            name='Referral',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lodged_on', models.DateTimeField(auto_now_add=True)),
                ('linked', models.BooleanField(default=False)),
                ('sent_from', models.SmallIntegerField(choices=[(1, 'Sent From Assessor'), (2, 'Sent From Referral')], default=1)),
                ('processing_status', models.CharField(choices=[('with_referral', 'Awaiting'), ('recalled', 'Recalled'), ('completed', 'Completed')], default='with_referral', max_length=30, verbose_name='Processing Status')),
                ('text', models.TextField(blank=True)),
                ('referral_text', models.TextField(blank=True)),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referrals', to='disturbance.Proposal')),
                ('referral', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='disturbance_referalls', to=settings.AUTH_USER_MODEL)),
                ('sent_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disturbance_assessor_referrals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-lodged_on',),
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('forest_region', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SystemMaintenance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
            ],
            options={
                'verbose_name_plural': 'System maintenance',
            },
        ),
        migrations.CreateModel(
            name='TaggedProposalApproverGroupActivities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='disturbance.ProposalApproverGroup')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disturbance_taggedproposalapprovergroupactivities_items', to='taggit.Tag')),
            ],
        ),
        migrations.CreateModel(
            name='TaggedProposalApproverGroupRegions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='disturbance.ProposalApproverGroup')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disturbance_taggedproposalapprovergroupregions_items', to='taggit.Tag')),
            ],
        ),
        migrations.CreateModel(
            name='TaggedProposalAssessorGroupActivities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='disturbance.ProposalAssessorGroup')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disturbance_taggedproposalassessorgroupactivities_items', to='taggit.Tag')),
            ],
        ),
        migrations.CreateModel(
            name='TaggedProposalAssessorGroupRegions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='disturbance.ProposalAssessorGroup')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disturbance_taggedproposalassessorgroupregions_items', to='taggit.Tag')),
            ],
        ),
        migrations.CreateModel(
            name='Tenure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('order', models.PositiveSmallIntegerField(default=0)),
                ('application_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tenure_app_types', to='disturbance.ApplicationType')),
            ],
            options={
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='UserDelegation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='disturbance.Organisation')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AmendmentRequest',
            fields=[
                ('proposalrequest_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='disturbance.ProposalRequest')),
                ('status', models.CharField(choices=[('requested', 'Requested'), ('amended', 'Amended')], default='requested', max_length=30, verbose_name='Status')),
                ('reason', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='disturbance.AmendmentReason')),
            ],
            bases=('disturbance.proposalrequest',),
        ),
        migrations.CreateModel(
            name='ApprovalLogEntry',
            fields=[
                ('communicationslogentry_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='disturbance.CommunicationsLogEntry')),
            ],
            bases=('disturbance.communicationslogentry',),
        ),
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('proposalrequest_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='disturbance.ProposalRequest')),
                ('status', models.CharField(choices=[('awaiting_assessment', 'Awaiting Assessment'), ('assessed', 'Assessed'), ('assessment_expired', 'Assessment Period Expired')], default='awaiting_assessment', max_length=20, verbose_name='Status')),
                ('date_last_reminded', models.DateField(blank=True, null=True)),
                ('comment', models.TextField(blank=True)),
                ('purpose', models.TextField(blank=True)),
                ('assigned_assessor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            bases=('disturbance.proposalrequest',),
        ),
        migrations.CreateModel(
            name='ComplianceAmendmentRequest',
            fields=[
                ('comprequest_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='disturbance.CompRequest')),
                ('status', models.CharField(choices=[('requested', 'Requested'), ('amended', 'Amended')], default='requested', max_length=30, verbose_name='Status')),
                ('reason', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='disturbance.ComplianceAmendmentReason')),
            ],
            bases=('disturbance.comprequest',),
        ),
        migrations.CreateModel(
            name='ComplianceLogEntry',
            fields=[
                ('communicationslogentry_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='disturbance.CommunicationsLogEntry')),
            ],
            bases=('disturbance.communicationslogentry',),
        ),
        migrations.CreateModel(
            name='ComplianceRequest',
            fields=[
                ('proposalrequest_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='disturbance.ProposalRequest')),
                ('reason', models.CharField(choices=[('outstanding', 'There are currently outstanding returns for the previous licence'), ('other', 'Other')], default='outstanding', max_length=30, verbose_name='Reason')),
            ],
            bases=('disturbance.proposalrequest',),
        ),
        migrations.CreateModel(
            name='OrganisationLogEntry',
            fields=[
                ('communicationslogentry_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='disturbance.CommunicationsLogEntry')),
            ],
            bases=('disturbance.communicationslogentry',),
        ),
        migrations.CreateModel(
            name='OrganisationRequestLogEntry',
            fields=[
                ('communicationslogentry_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='disturbance.CommunicationsLogEntry')),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comms_logs', to='disturbance.OrganisationRequest')),
            ],
            bases=('disturbance.communicationslogentry',),
        ),
        migrations.CreateModel(
            name='ProposalLogEntry',
            fields=[
                ('communicationslogentry_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='disturbance.CommunicationsLogEntry')),
            ],
            bases=('disturbance.communicationslogentry',),
        ),
        migrations.AddField(
            model_name='proposalrequirement',
            name='standard_requirement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='disturbance.ProposalStandardRequirement'),
        ),
        migrations.AddField(
            model_name='proposalrequest',
            name='officer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='proposalrequest',
            name='proposal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='disturbance.Proposal'),
        ),
        migrations.AddField(
            model_name='proposalassessorgroup',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='disturbance.Region'),
        ),
        migrations.AddField(
            model_name='proposalapprovergroup',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='disturbance.Region'),
        ),
        migrations.AddField(
            model_name='proposal',
            name='approval_level_document',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approval_level_document', to='disturbance.ProposalDocument'),
        ),
        migrations.AddField(
            model_name='proposal',
            name='assigned_approver',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='disturbance_proposals_approvals', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='proposal',
            name='assigned_officer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='disturbance_proposals_assigned', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='proposal',
            name='district',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='disturbance.District'),
        ),
        migrations.AddField(
            model_name='proposal',
            name='previous_application',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='disturbance.Proposal'),
        ),
        migrations.AddField(
            model_name='proposal',
            name='proxy_applicant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='disturbance_proxy', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='proposal',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='disturbance.Region'),
        ),
        migrations.AddField(
            model_name='proposal',
            name='submitter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='disturbance_proposals', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='organisation',
            name='delegates',
            field=models.ManyToManyField(blank=True, related_name='disturbance_organisations', through='disturbance.UserDelegation', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='organisation',
            name='organisation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Organisation'),
        ),
        migrations.AddField(
            model_name='district',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='districts', to='disturbance.Region'),
        ),
        migrations.AddField(
            model_name='comprequest',
            name='compliance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='disturbance.Compliance'),
        ),
        migrations.AddField(
            model_name='comprequest',
            name='officer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='compliance',
            name='proposal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compliances', to='disturbance.Proposal'),
        ),
        migrations.AddField(
            model_name='compliance',
            name='requirement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='compliance_requirement', to='disturbance.ProposalRequirement'),
        ),
        migrations.AddField(
            model_name='compliance',
            name='submitter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='disturbance_compliances', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='communicationslogentry',
            name='customer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='communicationslogentry',
            name='staff',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='approval',
            name='applicant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='disturbance_approvals', to='disturbance.Organisation'),
        ),
        migrations.AddField(
            model_name='approval',
            name='cover_letter_document',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cover_letter_document', to='disturbance.ApprovalDocument'),
        ),
        migrations.AddField(
            model_name='approval',
            name='current_proposal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='disturbance.Proposal'),
        ),
        migrations.AddField(
            model_name='approval',
            name='licence_document',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='licence_document', to='disturbance.ApprovalDocument'),
        ),
        migrations.AddField(
            model_name='approval',
            name='renewal_document',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='renewal_document', to='disturbance.ApprovalDocument'),
        ),
        migrations.AddField(
            model_name='approval',
            name='replaced_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='disturbance.Approval'),
        ),
        migrations.AlterUniqueTogether(
            name='userdelegation',
            unique_together=set([('organisation', 'user')]),
        ),
        migrations.AlterUniqueTogether(
            name='proposaltype',
            unique_together=set([('name', 'version')]),
        ),
        migrations.AddField(
            model_name='proposallogentry',
            name='proposal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comms_logs', to='disturbance.Proposal'),
        ),
        migrations.AddField(
            model_name='proposallogdocument',
            name='log_entry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='disturbance.ProposalLogEntry'),
        ),
        migrations.AddField(
            model_name='organisationrequestlogdocument',
            name='log_entry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='disturbance.OrganisationRequestLogEntry'),
        ),
        migrations.AddField(
            model_name='organisationlogentry',
            name='organisation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comms_logs', to='disturbance.Organisation'),
        ),
        migrations.AddField(
            model_name='organisationlogdocument',
            name='log_entry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='disturbance.OrganisationLogEntry'),
        ),
        migrations.AlterUniqueTogether(
            name='organisationcontact',
            unique_together=set([('organisation', 'email')]),
        ),
        migrations.AlterUniqueTogether(
            name='helppage',
            unique_together=set([('application_type', 'help_type', 'version')]),
        ),
        migrations.AddField(
            model_name='compliancelogentry',
            name='compliance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comms_logs', to='disturbance.Compliance'),
        ),
        migrations.AddField(
            model_name='compliancelogdocument',
            name='log_entry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='disturbance.ComplianceLogEntry'),
        ),
        migrations.AddField(
            model_name='approvallogentry',
            name='approval',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comms_logs', to='disturbance.Approval'),
        ),
        migrations.AddField(
            model_name='approvallogdocument',
            name='log_entry',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='disturbance.ApprovalLogEntry'),
        ),
        migrations.AlterUniqueTogether(
            name='approval',
            unique_together=set([('lodgement_number', 'issue_date')]),
        ),
        migrations.AlterUniqueTogether(
            name='activitymatrix',
            unique_together=set([('name', 'version')]),
        ),
    ]
