# -*- coding: utf-8 -*-
# Generated by Django 1.9.9 on 2016-09-08 06:25
from __future__ import unicode_literals

from django.db import migrations
from ledger.accounts.models import Profile, Address

def remove_duplicate_profile_addreses(apps, schema_editor):
    try:
        # Get Distinct hashes of addresses
        _dis = Address.objects.values_list('hash', flat=True).distinct()
        # Get all the multiple addresses
        _multiple_addresses = []
        for d in _dis:
            filter_addr = Address.objects.filter(hash=d)
            if len(filter_addr) > 1:
                _multiple_addresses.append(list(filter_addr))

        # Get the first out of the multiple address and add it to allowed list
        allowed_m, allowed_hash = [], []
        for m in _multiple_addresses:
            allowed_hash.append(m[0].hash)
            allowed_m.append(m.pop(0))

        # Multiple addresses list is left with duplicate addresses
        # Get profiles with hashes in the allowed list in order to update them
        profiles = Profile.objects.filter(postal_address__hash__in=allowed_hash)

        if profiles:
            # Update profiles using the duplicate address to use the correct address
            for a in allowed_m:
                for profile in profiles:
                    if profile.postal_address.hash == a.hash and profile.postal_address.id != a.id:
                       profile.postal_address = a
                       profile.save()

            # Remove the duplicate address
            for m in _multiple_addresses:
                for i in m:
                    i.delete()
    except: pass

class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0005_auto_20160907_1700'),
    ]

    operations = [
        migrations.RunPython(remove_duplicate_profile_addreses),
    ]
