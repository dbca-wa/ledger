# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-07-12 06:57
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BpayCollection',
            fields=[
                ('date', models.DateField(primary_key=True, serialize=False)),
                ('count', models.IntegerField()),
                ('credit_total', models.DecimalField(decimal_places=2, max_digits=12)),
                ('cheque_total', models.DecimalField(decimal_places=2, max_digits=12)),
                ('debit_total', models.DecimalField(decimal_places=2, max_digits=12)),
                ('total', models.DecimalField(decimal_places=2, max_digits=12)),
            ],
            options={
                'db_table': 'dpaw_payments_bpaycollection_v',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BpayFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inserted', models.DateTimeField(auto_now_add=True)),
                ('created', models.DateTimeField(help_text=b'File Creation Date Time.')),
                ('file_id', models.BigIntegerField(help_text=b'File Identification Number.')),
                ('settled', models.DateTimeField(help_text=b'File Settlement Date Time')),
                ('date_modifier', models.IntegerField(choices=[(1, b'interim/previous day'), (2, b'final/previous day'), (3, b'interim/same day'), (4, b'final/same day')], help_text=b'As of Date modifier')),
                ('credit_items', models.IntegerField(default=0)),
                ('credit_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('cheque_items', models.IntegerField(default=0)),
                ('cheque_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('debit_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('debit_items', models.IntegerField(default=0)),
                ('account_total', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('account_records', models.IntegerField(default=0)),
                ('group_total', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('group_accounts', models.IntegerField(default=0)),
                ('group_records', models.IntegerField(default=0)),
                ('file_total', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('file_groups', models.IntegerField(default=0)),
                ('file_records', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='BpayTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('type', models.CharField(choices=[(b'399', b'credit'), (b'699', b'debit')], help_text=b'Indicates whether it is a credit or debit item', max_length=3, validators=[django.core.validators.MinLengthValidator(3)])),
                ('cheque_num', models.IntegerField(default=0, help_text=b'Number of cheques in deposit')),
                ('crn', models.BigIntegerField(help_text=b'Customer Referencer Number')),
                ('txn_ref', models.CharField(help_text=b'Transaction Reference Number', max_length=21, validators=[django.core.validators.MinLengthValidator(12)])),
                ('service_code', models.CharField(help_text=b'Unique identification for a service provider realting to a bill.', max_length=7, validators=[django.core.validators.MinLengthValidator(1)])),
                ('p_instruction_code', models.CharField(choices=[(b'05', b'payment'), (b'15', b'error correction'), (b'25', b'reversal')], help_text=b'Payment instruction method.', max_length=2, validators=[django.core.validators.MinLengthValidator(2)])),
                ('p_method_code', models.CharField(choices=[(b'001', b'Debit Account'), (b'101', b'Visa'), (b'201', b'Mastercard'), (b'301', b'Bankcard')], help_text=b'Method of payment.', max_length=3, validators=[django.core.validators.MinLengthValidator(3)])),
                ('p_date', models.DateTimeField(help_text=b'Date of payment.')),
                ('entry_method', models.CharField(blank=True, choices=[(b'000', b'undefined'), (b'001', b'key entry by operator'), (b'002', b'touch tone entry by payer'), (b'003', b'speech recognition'), (b'004', b'internet/on-line banking'), (b'005', b'electtronic bill presentment'), (b'006', b'batch data entry'), (b'007', b'mobile entry')], help_text=b'Manner in which the payment details are captured.', max_length=3, null=True)),
                ('orig_ref_num', models.CharField(blank=True, help_text=b'Contains the original/previous CRN in the case of a refund or reversal.', max_length=21, null=True)),
                ('ref_rev_code', models.CharField(blank=True, choices=[(b'001', b'payer paid twice'), (b'002', b'payer paid wrong account'), (b'003', b'payer paid wrong biller'), (b'004', b'payer paid wrong amount'), (b'005', b'payer did not authorise'), (b'400', b'Visa chargeback'), (b'500', b'MasterCard chargeback'), (b'600', b'Bankcard chargeback')], help_text=b'Reason code for reversal or refund.', max_length=3, null=True)),
                ('discretionary_data', models.CharField(help_text=b'Reason for refund or reversal.', max_length=50, null=True)),
                ('payer_name', models.CharField(blank=True, help_text=b"Name of payer extracted from payer's account details.", max_length=40, null=True)),
                ('country', models.CharField(help_text=b'Country of payment.', max_length=3, null=True)),
                ('state', models.CharField(blank=True, help_text=b'State code of payer institution.', max_length=4, null=True)),
                ('car', models.CharField(help_text=b'Customer Additional Reference.', max_length=20, null=True)),
                ('discount_ref', models.CharField(blank=True, help_text=b'Discount Reference Code.', max_length=20, null=True)),
                ('discount_method', models.CharField(blank=True, help_text=b'Discount Method Code.', max_length=3, null=True)),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='bpay.BpayFile')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='bpayfile',
            unique_together=set([('created', 'file_id')]),
        ),
        migrations.AlterUniqueTogether(
            name='bpaytransaction',
            unique_together=set([('crn', 'txn_ref', 'p_date')]),
        ),
    ]
